# HyperYOLOv1.1-S

# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# HyperYOLOv1.1 backbone
backbone:
  [
   [-1, 1, Silence, []],

   # conv down
   [-1, 1, Conv, [32, 3, 2]],  # 1-P1/

   # conv down
   [-1, 1, Conv, [64, 3, 2]],  # 2-P2/

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [128, 64, 32, 1]],  # 3

   # avg-conv down
   [-1, 1, ADown, [128]],  # 4-P3/

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 5

   # avg-conv down
   [-1, 1, ADown, [256]],  # 6-P4/

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 7

   # avg-conv down
   [-1, 1, ADown, [256]],  # 8-P5/

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 9
  ]

# HyperYOLOv1.1 head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [256, 128]],  # 10

   # Semantic Collecting
   [1, 1, ShuffleDownSample, [128, 4]],    # 11  80*80*128  [cout, r]
   [-1, 1, ShuffleDownSample, [256, 2]],  # 12  40*40*256
   [3, 1, ShuffleDownSample, [256, 4]],  # 13  40*40*256
   [5, 1, ShuffleDownSample, [256, 2]],   # 14  40*40*256
   [10, 1, nn.Upsample, [None, 2, 'nearest']], # 15  40*40*256

   [[12, 13, 14, 7, 15], 1, SplitHyperComputeModule_Threshold, [256]], # 16

   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]], # 17   256*40*40

   # Semantic Scattering
   [-1, 1, nn.AvgPool2d, [2, 2, 0]], # 18
   [[-1, 10], 1, Concat, [ 1 ]], # 19
   [-1, 1, Conv, [256, 1, 1]], # 20

   [[17, 7], 1, Concat, [1]], # 21
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]], # 22

   [17, 1, nn.Upsample, [None, 2, 'nearest']], # 23
   [[-1, 5], 1, Concat, [1]], # 24
   [-1, 1, RepNCSPELAN4, [128, 128, 64, 1]], # 25

   [-1, 1, ADown, [128]], # 26
   [[-1, 22], 1, Concat, [1]], # 27
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]], # 28

   [-1, 1, ADown, [256]], # 29
   [[-1, 20], 1, Concat, [1]], # 30
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]], # 31


   # multi-level reversible auxiliary branch

   # routing
   [5, 1, CBLinear, [[128]]], # 32
   [7, 1, CBLinear, [[128, 256]]], # 33
   [9, 1, CBLinear, [[128, 256, 256]]], # 34

   # conv down
   [0, 1, Conv, [32, 3, 2]],  # 35-P1/2

   # conv down
   [-1, 1, Conv, [64, 3, 2]],  # 36-P2/4

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [128, 64, 32, 1]],  # 37

   # avg-conv down fuse
   [-1, 1, ADown, [128]],  # 38-P3/8
   [[32, 33, 34, -1], 1, CBFuse, [[0, 0, 0]]], # 39

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 40

   # avg-conv down fuse
   [-1, 1, ADown, [256]],  # 41-P4/16
   [[33, 34, -1], 1, CBFuse, [[1, 1]]], # 42

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 43

   # avg-conv down fuse
   [-1, 1, ADown, [256]],  # 44-P5/32
   [[34, -1], 1, CBFuse, [[2]]], # 45

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 46



   # detection head

   # detect
   [[40, 43, 46, 25, 28, 31], 1, DualDDetect, [nc]],  # DualDDetect(A3, A4, A5, P3, P4, P5)
  ]
